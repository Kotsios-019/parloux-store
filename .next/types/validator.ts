// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/3d-cards-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/3d-cards-demo">> = Specific
  const handler = {} as typeof import("../../src/app/3d-cards-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/about-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about-demo">> = Specific
  const handler = {} as typeof import("../../src/app/about-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/accessibility-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/accessibility-demo">> = Specific
  const handler = {} as typeof import("../../src/app/accessibility-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/account/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/account">> = Specific
  const handler = {} as typeof import("../../src/app/account/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/breadcrumb-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/breadcrumb-demo">> = Specific
  const handler = {} as typeof import("../../src/app/breadcrumb-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/checkout-enhanced/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/checkout-enhanced">> = Specific
  const handler = {} as typeof import("../../src/app/checkout-enhanced/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/checkout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/checkout">> = Specific
  const handler = {} as typeof import("../../src/app/checkout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/checkout/success/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/checkout/success">> = Specific
  const handler = {} as typeof import("../../src/app/checkout/success/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/collections/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/collections/[slug]">> = Specific
  const handler = {} as typeof import("../../src/app/collections/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/collections/aw25/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/collections/aw25">> = Specific
  const handler = {} as typeof import("../../src/app/collections/aw25/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/collections/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/collections">> = Specific
  const handler = {} as typeof import("../../src/app/collections/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/contact-enhanced/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact-enhanced">> = Specific
  const handler = {} as typeof import("../../src/app/contact-enhanced/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/essence-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/essence-demo">> = Specific
  const handler = {} as typeof import("../../src/app/essence-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../src/app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/marquee-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/marquee-demo">> = Specific
  const handler = {} as typeof import("../../src/app/marquee-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/morphing-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/morphing-demo">> = Specific
  const handler = {} as typeof import("../../src/app/morphing-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/products/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/products/[slug]">> = Specific
  const handler = {} as typeof import("../../src/app/products/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/responsive-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/responsive-demo">> = Specific
  const handler = {} as typeof import("../../src/app/responsive-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/search/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/search">> = Specific
  const handler = {} as typeof import("../../src/app/search/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/shopify-integration-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/shopify-integration-demo">> = Specific
  const handler = {} as typeof import("../../src/app/shopify-integration-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/testimonials-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/testimonials-demo">> = Specific
  const handler = {} as typeof import("../../src/app/testimonials-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/theme-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/theme-demo">> = Specific
  const handler = {} as typeof import("../../src/app/theme-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/timeline-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/timeline-demo">> = Specific
  const handler = {} as typeof import("../../src/app/timeline-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/video-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/video-demo">> = Specific
  const handler = {} as typeof import("../../src/app/video-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/login">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/logout">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/me">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/profile/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/profile">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/profile/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/reset-password/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/reset-password">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/reset-password/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/checkout/create-session/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/checkout/create-session">> = Specific
  const handler = {} as typeof import("../../src/app/api/checkout/create-session/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/checkout/return/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/checkout/return">> = Specific
  const handler = {} as typeof import("../../src/app/api/checkout/return/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/orders/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/orders/create">> = Specific
  const handler = {} as typeof import("../../src/app/api/orders/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/user-data/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user-data">> = Specific
  const handler = {} as typeof import("../../src/app/api/user-data/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/webhooks/shopify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/webhooks/shopify">> = Specific
  const handler = {} as typeof import("../../src/app/api/webhooks/shopify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
