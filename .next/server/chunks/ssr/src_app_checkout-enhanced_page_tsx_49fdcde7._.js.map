{"version":3,"sources":["turbopack:///[project]/src/app/checkout-enhanced/page.tsx","turbopack:///[project]/src/components/forms/MultiStepForm.tsx","turbopack:///[project]/src/components/forms/FormValidation.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { CreditCard, Truck, MapPin, User, Lock, CheckCircle } from 'lucide-react';\r\nimport { MultiStepForm, FormFieldWrapper, FormValidationSummary } from '@/components/forms/MultiStepForm';\r\nimport { ValidatedInput, ValidatedSelect } from '@/components/forms/FormValidation';\r\nimport { useCart } from '@/contexts/MockCartContext';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { useToastNotifications } from '@/components/ui/Toast';\r\nimport GlobalLayout from '@/components/layout/GlobalLayout';\r\n\r\nexport default function EnhancedCheckoutForm() {\r\n  const { items, clearCart } = useCart();\r\n  const { isAuthenticated, user } = useAuth();\r\n  const { showSuccess, showError } = useToastNotifications();\r\n\r\n  // Redirect if not authenticated\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <GlobalLayout>\r\n        <div className=\"min-h-screen bg-gradient-to-br from-champagne-nude/30 to-elegant-base/30 dark:from-champagne-nude/20 dark:to-elegant-base/20 flex items-center justify-center px-4\">\r\n          <div className=\"max-w-md w-full bg-white dark:bg-deep-black rounded-lg shadow-lg p-8 text-center\">\r\n            <Lock className=\"w-16 h-16 text-soft-gold mx-auto mb-4\" />\r\n            <h1 className=\"text-2xl font-cormorant font-bold text-deep-black dark:text-ivory-white mb-4\">\r\n              Authentication Required\r\n            </h1>\r\n            <p className=\"text-font-secondary dark:text-font-secondary-dark mb-6\">\r\n              Please log in to proceed with checkout.\r\n            </p>\r\n            <a\r\n              href=\"/login\"\r\n              className=\"btn-primary\"\r\n            >\r\n              Go to Login\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </GlobalLayout>\r\n    );\r\n  }\r\n\r\n  // Redirect if cart is empty\r\n  if (items.length === 0) {\r\n    return (\r\n      <GlobalLayout>\r\n        <div className=\"min-h-screen bg-gradient-to-br from-champagne-nude/30 to-elegant-base/30 dark:from-champagne-nude/20 dark:to-elegant-base/20 flex items-center justify-center px-4\">\r\n          <div className=\"max-w-md w-full bg-white dark:bg-deep-black rounded-lg shadow-lg p-8 text-center\">\r\n            <Truck className=\"w-16 h-16 text-soft-gold mx-auto mb-4\" />\r\n            <h1 className=\"text-2xl font-cormorant font-bold text-deep-black dark:text-ivory-white mb-4\">\r\n              Your Cart is Empty\r\n            </h1>\r\n            <p className=\"text-font-secondary dark:text-font-secondary-dark mb-6\">\r\n              Add some items to your cart before proceeding to checkout.\r\n            </p>\r\n            <a\r\n              href=\"/products\"\r\n              className=\"btn-primary\"\r\n            >\r\n              Continue Shopping\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </GlobalLayout>\r\n    );\r\n  }\r\n\r\n  // Form steps configuration\r\n  const steps = [\r\n    {\r\n      id: 'shipping',\r\n      title: 'Shipping Information',\r\n      description: 'Where should we deliver your order?',\r\n      fields: ['firstName', 'lastName', 'email', 'phone', 'address', 'city', 'postalCode', 'country'],\r\n      validation: {\r\n        firstName: [{ required: true, message: 'First name is required' }],\r\n        lastName: [{ required: true, message: 'Last name is required' }],\r\n        email: [\r\n          { required: true, message: 'Email is required' },\r\n          { pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, message: 'Please enter a valid email address' }\r\n        ],\r\n        phone: [{ pattern: /^[\\+]?[1-9][\\d]{0,15}$/, message: 'Please enter a valid phone number' }],\r\n        address: [{ required: true, message: 'Address is required' }],\r\n        city: [{ required: true, message: 'City is required' }],\r\n        postalCode: [{ required: true, message: 'Postal code is required' }],\r\n        country: [{ required: true, message: 'Country is required' }]\r\n      }\r\n    },\r\n    {\r\n      id: 'billing',\r\n      title: 'Billing Information',\r\n      description: 'Payment and billing details',\r\n      fields: ['billingSameAsShipping', 'billingFirstName', 'billingLastName', 'billingAddress', 'billingCity', 'billingPostalCode', 'billingCountry'],\r\n      validation: {\r\n        billingFirstName: [{ required: true, message: 'Billing first name is required' }],\r\n        billingLastName: [{ required: true, message: 'Billing last name is required' }],\r\n        billingAddress: [{ required: true, message: 'Billing address is required' }],\r\n        billingCity: [{ required: true, message: 'Billing city is required' }],\r\n        billingPostalCode: [{ required: true, message: 'Billing postal code is required' }],\r\n        billingCountry: [{ required: true, message: 'Billing country is required' }]\r\n      }\r\n    },\r\n    {\r\n      id: 'payment',\r\n      title: 'Payment Method',\r\n      description: 'Choose your payment method',\r\n      fields: ['paymentMethod', 'cardNumber', 'expiryDate', 'cvv', 'cardName'],\r\n      validation: {\r\n        paymentMethod: [{ required: true, message: 'Payment method is required' }],\r\n        cardNumber: [\r\n          { required: true, message: 'Card number is required' },\r\n          { pattern: /^[0-9\\s]{13,19}$/, message: 'Please enter a valid card number' }\r\n        ],\r\n        expiryDate: [\r\n          { required: true, message: 'Expiry date is required' },\r\n          { pattern: /^(0[1-9]|1[0-2])\\/\\d{2}$/, message: 'Please enter a valid expiry date (MM/YY)' }\r\n        ],\r\n        cvv: [\r\n          { required: true, message: 'CVV is required' },\r\n          { pattern: /^[0-9]{3,4}$/, message: 'Please enter a valid CVV' }\r\n        ],\r\n        cardName: [{ required: true, message: 'Cardholder name is required' }]\r\n      }\r\n    },\r\n    {\r\n      id: 'review',\r\n      title: 'Review & Confirm',\r\n      description: 'Review your order before placing it',\r\n      fields: ['acceptTerms', 'newsletterSignup'],\r\n      validation: {\r\n        acceptTerms: [{ required: true, message: 'You must accept the terms and conditions' }]\r\n      }\r\n    }\r\n  ];\r\n\r\n  // Initial form values\r\n  const initialValues = {\r\n    // Shipping\r\n    firstName: user?.firstName || '',\r\n    lastName: user?.lastName || '',\r\n    email: user?.email || '',\r\n    phone: '',\r\n    address: '',\r\n    city: '',\r\n    postalCode: '',\r\n    country: 'cy',\r\n    \r\n    // Billing\r\n    billingSameAsShipping: 'true',\r\n    billingFirstName: '',\r\n    billingLastName: '',\r\n    billingAddress: '',\r\n    billingCity: '',\r\n    billingPostalCode: '',\r\n    billingCountry: 'cy',\r\n    \r\n    // Payment\r\n    paymentMethod: '',\r\n    cardNumber: '',\r\n    expiryDate: '',\r\n    cvv: '',\r\n    cardName: '',\r\n    \r\n    // Review\r\n    acceptTerms: 'false',\r\n    newsletterSignup: 'false'\r\n  };\r\n\r\n  const handleFormSubmit = async (values: { [key: string]: string }) => {\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      // Clear cart\r\n      clearCart();\r\n      \r\n      showSuccess('Order placed successfully!', 'You will receive a confirmation email shortly');\r\n      \r\n      // Redirect to success page\r\n      window.location.href = '/checkout/success';\r\n    } catch (error) {\r\n      showError('Order failed', 'Please try again or contact support');\r\n    }\r\n  };\r\n\r\n  const countryOptions = [\r\n    { value: 'cy', label: 'Cyprus' },\r\n    { value: 'gr', label: 'Greece' },\r\n    { value: 'us', label: 'United States' },\r\n    { value: 'uk', label: 'United Kingdom' },\r\n    { value: 'de', label: 'Germany' },\r\n    { value: 'fr', label: 'France' },\r\n    { value: 'it', label: 'Italy' },\r\n    { value: 'es', label: 'Spain' }\r\n  ];\r\n\r\n  const paymentMethodOptions = [\r\n    { value: '', label: 'Select payment method', disabled: true },\r\n    { value: 'card', label: 'Credit/Debit Card' },\r\n    { value: 'paypal', label: 'PayPal' },\r\n    { value: 'apple', label: 'Apple Pay' },\r\n    { value: 'google', label: 'Google Pay' }\r\n  ];\r\n\r\n  return (\r\n    <GlobalLayout>\r\n      <div className=\"min-h-screen bg-gradient-to-br from-champagne-nude/30 to-elegant-base/30 dark:from-champagne-nude/20 dark:to-elegant-base/20 py-8\">\r\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          {/* Header */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n            className=\"text-center mb-8\"\r\n          >\r\n            <h1 className=\"text-3xl font-cormorant font-bold text-deep-black dark:text-ivory-white mb-2\">\r\n              Secure Checkout\r\n            </h1>\r\n            <p className=\"text-font-secondary dark:text-font-secondary-dark font-josefin\">\r\n              Complete your order with confidence\r\n            </p>\r\n          </motion.div>\r\n\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n            {/* Checkout Form */}\r\n            <div className=\"lg:col-span-2\">\r\n              <MultiStepForm\r\n                steps={steps}\r\n                initialValues={initialValues}\r\n                onSubmit={handleFormSubmit}\r\n                className=\"bg-white dark:bg-deep-black rounded-lg shadow-lg p-6\"\r\n              >\r\n                {/* Step 1: Shipping Information */}\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <FormFieldWrapper\r\n                      fieldName=\"firstName\"\r\n                      formState={formState}\r\n                      onFieldChange={handleChange}\r\n                      onFieldBlur={handleBlur}\r\n                    >\r\n                      <ValidatedInput\r\n                        name=\"firstName\"\r\n                        label=\"First Name\"\r\n                        required\r\n                        placeholder=\"Enter your first name\"\r\n                        successMessage=\"First name looks good!\"\r\n                        showSuccessIcon\r\n                      />\r\n                    </FormFieldWrapper>\r\n                    \r\n                    <FormFieldWrapper\r\n                      fieldName=\"lastName\"\r\n                      formState={formState}\r\n                      onFieldChange={handleChange}\r\n                      onFieldBlur={handleBlur}\r\n                    >\r\n                      <ValidatedInput\r\n                        name=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        required\r\n                        placeholder=\"Enter your last name\"\r\n                        successMessage=\"Last name looks good!\"\r\n                        showSuccessIcon\r\n                      />\r\n                    </FormFieldWrapper>\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <FormFieldWrapper\r\n                      fieldName=\"email\"\r\n                      formState={formState}\r\n                      onFieldChange={handleChange}\r\n                      onFieldBlur={handleBlur}\r\n                    >\r\n                      <ValidatedInput\r\n                        name=\"email\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        required\r\n                        placeholder=\"Enter your email\"\r\n                        successMessage=\"Email looks good!\"\r\n                        showSuccessIcon\r\n                      />\r\n                    </FormFieldWrapper>\r\n                    \r\n                    <FormFieldWrapper\r\n                      fieldName=\"phone\"\r\n                      formState={formState}\r\n                      onFieldChange={handleChange}\r\n                      onFieldBlur={handleBlur}\r\n                    >\r\n                      <ValidatedInput\r\n                        name=\"phone\"\r\n                        label=\"Phone Number\"\r\n                        type=\"tel\"\r\n                        placeholder=\"Enter your phone number\"\r\n                        successMessage=\"Phone number looks good!\"\r\n                        showSuccessIcon\r\n                      />\r\n                    </FormFieldWrapper>\r\n                  </div>\r\n                  \r\n                  <FormFieldWrapper\r\n                    fieldName=\"address\"\r\n                    formState={formState}\r\n                    onFieldChange={handleChange}\r\n                    onFieldBlur={handleBlur}\r\n                  >\r\n                    <ValidatedInput\r\n                      name=\"address\"\r\n                      label=\"Street Address\"\r\n                      required\r\n                      placeholder=\"Enter your street address\"\r\n                      successMessage=\"Address looks good!\"\r\n                      showSuccessIcon\r\n                    />\r\n                  </FormFieldWrapper>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <FormFieldWrapper\r\n                      fieldName=\"city\"\r\n                      formState={formState}\r\n                      onFieldChange={handleChange}\r\n                      onFieldBlur={handleBlur}\r\n                    >\r\n                      <ValidatedInput\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        required\r\n                        placeholder=\"Enter your city\"\r\n                        successMessage=\"City looks good!\"\r\n                        showSuccessIcon\r\n                      />\r\n                    </FormFieldWrapper>\r\n                    \r\n                    <FormFieldWrapper\r\n                      fieldName=\"postalCode\"\r\n                      formState={formState}\r\n                      onFieldChange={handleChange}\r\n                      onFieldBlur={handleBlur}\r\n                    >\r\n                      <ValidatedInput\r\n                        name=\"postalCode\"\r\n                        label=\"Postal Code\"\r\n                        required\r\n                        placeholder=\"Enter postal code\"\r\n                        successMessage=\"Postal code looks good!\"\r\n                        showSuccessIcon\r\n                      />\r\n                    </FormFieldWrapper>\r\n                    \r\n                    <FormFieldWrapper\r\n                      fieldName=\"country\"\r\n                      formState={formState}\r\n                      onFieldChange={handleChange}\r\n                      onFieldBlur={handleBlur}\r\n                    >\r\n                      <ValidatedSelect\r\n                        name=\"country\"\r\n                        label=\"Country\"\r\n                        required\r\n                        options={countryOptions}\r\n                        successMessage=\"Country selected!\"\r\n                      />\r\n                    </FormFieldWrapper>\r\n                  </div>\r\n                </div>\r\n              </MultiStepForm>\r\n            </div>\r\n\r\n            {/* Order Summary */}\r\n            <div className=\"lg:col-span-1\">\r\n              <motion.div\r\n                initial={{ opacity: 0, x: 20 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                transition={{ duration: 0.5, delay: 0.2 }}\r\n                className=\"bg-white dark:bg-deep-black rounded-lg shadow-lg p-6 sticky top-8\"\r\n              >\r\n                <h2 className=\"text-xl font-cormorant font-bold text-deep-black dark:text-ivory-white mb-6\">\r\n                  Order Summary\r\n                </h2>\r\n                \r\n                {/* Order Items */}\r\n                <div className=\"space-y-4 mb-6\">\r\n                  {items.map((item) => (\r\n                    <div key={item.id} className=\"flex items-center space-x-3\">\r\n                      <div className=\"w-16 h-16 bg-elegant-base/20 rounded-lg flex items-center justify-center\">\r\n                        <img\r\n                          src={item.product.images[0]}\r\n                          alt={item.product.title}\r\n                          className=\"w-12 h-12 object-cover rounded\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <h3 className=\"font-josefin font-semibold text-font-primary dark:text-ivory-white text-sm\">\r\n                          {item.product.title}\r\n                        </h3>\r\n                        <p className=\"text-xs text-font-secondary dark:text-font-secondary-dark\">\r\n                          {item.size && `Size: ${item.size}`}\r\n                          {item.color && ` • Color: ${item.color}`}\r\n                        </p>\r\n                        <p className=\"text-sm font-josefin font-semibold text-soft-gold\">\r\n                          ${item.variant.price} × {item.quantity}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                \r\n                {/* Order Totals */}\r\n                <div className=\"space-y-2 border-t border-elegant-base dark:border-elegant-base pt-4\">\r\n                  <div className=\"flex justify-between text-font-secondary dark:text-font-secondary-dark\">\r\n                    <span>Subtotal</span>\r\n                    <span>${items.reduce((sum, item) => sum + (item.variant.price * item.quantity), 0).toFixed(2)}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-font-secondary dark:text-font-secondary-dark\">\r\n                    <span>Shipping</span>\r\n                    <span>Free</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-font-secondary dark:text-font-secondary-dark\">\r\n                    <span>Tax</span>\r\n                    <span>$0.00</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-lg font-josefin font-bold text-deep-black dark:text-ivory-white border-t border-elegant-base dark:border-elegant-base pt-2\">\r\n                    <span>Total</span>\r\n                    <span>${items.reduce((sum, item) => sum + (item.variant.price * item.quantity), 0).toFixed(2)}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Security Badge */}\r\n                <div className=\"mt-6 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Lock className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\r\n                    <span className=\"text-sm font-josefin text-green-800 dark:text-green-200\">\r\n                      Secure checkout with SSL encryption\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </GlobalLayout>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { ChevronLeft, ChevronRight, CheckCircle, AlertCircle, Info } from 'lucide-react';\r\nimport { useFormValidation, FormProgress, FormSuccess } from './FormValidation';\r\nimport { useToastNotifications } from '@/components/ui/Toast';\r\n\r\ninterface FormStep {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  fields: string[];\r\n  validation?: { [key: string]: any };\r\n}\r\n\r\ninterface MultiStepFormProps {\r\n  steps: FormStep[];\r\n  initialValues: { [key: string]: string };\r\n  onSubmit: (values: { [key: string]: string }) => Promise<void>;\r\n  onStepChange?: (stepIndex: number) => void;\r\n  className?: string;\r\n}\r\n\r\nexport function MultiStepForm({\r\n  steps,\r\n  initialValues,\r\n  onSubmit,\r\n  onStepChange,\r\n  className = ''\r\n}: MultiStepFormProps) {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [completedSteps, setCompletedSteps] = useState<Set<number>>(new Set());\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  \r\n  const { showSuccess, showError } = useToastNotifications();\r\n\r\n  // Create validation rules for current step\r\n  const getCurrentStepValidation = () => {\r\n    const currentStepData = steps[currentStep];\r\n    const validation: { [key: string]: any } = {};\r\n    \r\n    currentStepData.fields.forEach(field => {\r\n      validation[field] = currentStepData.validation?.[field] || [];\r\n    });\r\n    \r\n    return validation;\r\n  };\r\n\r\n  const {\r\n    formState,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    resetForm,\r\n    validateForm\r\n  } = useFormValidation(\r\n    initialValues,\r\n    getCurrentStepValidation(),\r\n    async (values) => {\r\n      if (currentStep === steps.length - 1) {\r\n        // Last step - submit the form\r\n        await onSubmit(values);\r\n        setIsSuccess(true);\r\n        showSuccess('Form submitted successfully!', 'Your information has been saved');\r\n      } else {\r\n        // Move to next step\r\n        setCompletedSteps(prev => new Set([...prev, currentStep]));\r\n        setCurrentStep(prev => prev + 1);\r\n        showSuccess('Step completed!', 'Moving to next step');\r\n      }\r\n    }\r\n  );\r\n\r\n  // Update validation rules when step changes\r\n  useEffect(() => {\r\n    // Re-validate current step when moving to it\r\n    validateForm();\r\n  }, [currentStep]);\r\n\r\n  // Notify parent component of step change\r\n  useEffect(() => {\r\n    if (onStepChange) {\r\n      onStepChange(currentStep);\r\n    }\r\n  }, [currentStep, onStepChange]);\r\n\r\n  const currentStepData = steps[currentStep];\r\n  const isFirstStep = currentStep === 0;\r\n  const isLastStep = currentStep === steps.length - 1;\r\n  const canProceed = formState.isValid && !formState.isSubmitting;\r\n\r\n  const handleNext = () => {\r\n    if (canProceed) {\r\n      setCompletedSteps(prev => new Set([...prev, currentStep]));\r\n      setCurrentStep(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (!isFirstStep) {\r\n      setCurrentStep(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleStepClick = (stepIndex: number) => {\r\n    // Allow navigation to completed steps or next step\r\n    if (completedSteps.has(stepIndex) || stepIndex === currentStep + 1) {\r\n      setCurrentStep(stepIndex);\r\n    }\r\n  };\r\n\r\n  const resetToStep = (stepIndex: number) => {\r\n    setCurrentStep(stepIndex);\r\n    setCompletedSteps(prev => {\r\n      const newSet = new Set(prev);\r\n      for (let i = stepIndex; i < steps.length; i++) {\r\n        newSet.delete(i);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  if (isSuccess) {\r\n    return (\r\n      <FormSuccess\r\n        title=\"Form Submitted Successfully!\"\r\n        message=\"Thank you for completing the form. We'll process your information and get back to you soon.\"\r\n        onClose={() => {\r\n          setIsSuccess(false);\r\n          resetForm();\r\n          setCurrentStep(0);\r\n          setCompletedSteps(new Set());\r\n        }}\r\n        className={className}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`space-y-6 ${className}`}>\r\n      {/* Progress Indicator */}\r\n      <FormProgress\r\n        currentStep={currentStep + 1}\r\n        totalSteps={steps.length}\r\n      />\r\n\r\n      {/* Step Navigation */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex space-x-2\">\r\n          {steps.map((step, index) => (\r\n            <button\r\n              key={step.id}\r\n              onClick={() => handleStepClick(index)}\r\n              disabled={!completedSteps.has(index) && index !== currentStep && index !== currentStep + 1}\r\n              className={`flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-josefin transition-colors ${\r\n                index === currentStep\r\n                  ? 'bg-soft-gold text-deep-black'\r\n                  : completedSteps.has(index)\r\n                  ? 'bg-green-100 dark:bg-green-900/20 text-green-800 dark:text-green-200'\r\n                  : index === currentStep + 1\r\n                  ? 'bg-elegant-base/20 text-font-primary dark:text-ivory-white'\r\n                  : 'bg-gray-100 dark:bg-gray-800 text-gray-400 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              {completedSteps.has(index) ? (\r\n                <CheckCircle className=\"w-4 h-4\" />\r\n              ) : (\r\n                <span className=\"w-4 h-4 rounded-full border-2 border-current flex items-center justify-center text-xs\">\r\n                  {index + 1}\r\n                </span>\r\n              )}\r\n              <span>{step.title}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Step Content */}\r\n      <motion.div\r\n        key={currentStep}\r\n        initial={{ opacity: 0, x: 20 }}\r\n        animate={{ opacity: 1, x: 0 }}\r\n        exit={{ opacity: 0, x: -20 }}\r\n        transition={{ duration: 0.3 }}\r\n        className=\"bg-white dark:bg-deep-black rounded-lg border border-elegant-base dark:border-elegant-base p-6\"\r\n      >\r\n        {/* Step Header */}\r\n        <div className=\"mb-6\">\r\n          <h2 className=\"text-2xl font-cormorant font-bold text-deep-black dark:text-ivory-white mb-2\">\r\n            {currentStepData.title}\r\n          </h2>\r\n          {currentStepData.description && (\r\n            <p className=\"text-font-secondary dark:text-font-secondary-dark font-josefin\">\r\n              {currentStepData.description}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Step Form */}\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          {/* Form fields will be rendered here by parent component */}\r\n          <div className=\"space-y-4\">\r\n            {/* This is where the actual form fields would be rendered */}\r\n            {/* The parent component should pass the form fields as children */}\r\n          </div>\r\n\r\n          {/* Step Actions */}\r\n          <div className=\"flex items-center justify-between pt-6 border-t border-elegant-base dark:border-elegant-base\">\r\n            <div className=\"flex space-x-3\">\r\n              {!isFirstStep && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handlePrevious}\r\n                  className=\"flex items-center space-x-2 px-4 py-2 border border-elegant-base dark:border-elegant-base text-font-primary dark:text-ivory-white hover:bg-elegant-base/10 transition-colors rounded-lg font-josefin font-semibold\"\r\n                >\r\n                  <ChevronLeft className=\"w-4 h-4\" />\r\n                  <span>Previous</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex space-x-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={resetToStep.bind(null, 0)}\r\n                className=\"px-4 py-2 text-font-secondary dark:text-font-secondary-dark hover:text-font-primary dark:hover:text-ivory-white transition-colors font-josefin font-semibold\"\r\n              >\r\n                Reset\r\n              </button>\r\n              \r\n              <button\r\n                type=\"submit\"\r\n                disabled={!canProceed}\r\n                className={`flex items-center space-x-2 px-6 py-2 rounded-lg font-josefin font-semibold transition-colors ${\r\n                  canProceed\r\n                    ? 'bg-soft-gold text-deep-black hover:bg-bright-gold'\r\n                    : 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                }`}\r\n              >\r\n                <span>{isLastStep ? 'Submit' : 'Next'}</span>\r\n                {!isLastStep && <ChevronRight className=\"w-4 h-4\" />}\r\n                {formState.isSubmitting && (\r\n                  <div className=\"w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </motion.div>\r\n\r\n      {/* Step Validation Summary */}\r\n      {Object.keys(formState.errors).length > 0 && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\"\r\n        >\r\n          <div className=\"flex items-start space-x-3\">\r\n            <AlertCircle className=\"w-5 h-5 text-red-600 dark:text-red-400 flex-shrink-0 mt-0.5\" />\r\n            <div>\r\n              <h3 className=\"text-sm font-josefin font-semibold text-red-800 dark:text-red-200 mb-1\">\r\n                Please fix the following errors:\r\n              </h3>\r\n              <ul className=\"text-sm text-red-700 dark:text-red-300 space-y-1\">\r\n                {Object.entries(formState.errors).map(([field, error]) => (\r\n                  <li key={field} className=\"flex items-center space-x-2\">\r\n                    <span className=\"w-1 h-1 bg-red-600 rounded-full\"></span>\r\n                    <span>{error}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Form field wrapper for multi-step forms\r\nexport function FormFieldWrapper({\r\n  children,\r\n  fieldName,\r\n  formState,\r\n  onFieldChange,\r\n  onFieldBlur\r\n}: {\r\n  children: React.ReactNode;\r\n  fieldName: string;\r\n  formState: any;\r\n  onFieldChange: (name: string, value: string) => void;\r\n  onFieldBlur: (name: string) => void;\r\n}) {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      {React.cloneElement(children as React.ReactElement, {\r\n        value: formState.values[fieldName] || '',\r\n        onChange: (value: string) => onFieldChange(fieldName, value),\r\n        onBlur: () => onFieldBlur(fieldName),\r\n        error: formState.errors[fieldName],\r\n        touched: formState.touched[fieldName]\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Form validation summary\r\nexport function FormValidationSummary({\r\n  errors,\r\n  className = ''\r\n}: {\r\n  errors: { [key: string]: string };\r\n  className?: string;\r\n}) {\r\n  if (Object.keys(errors).length === 0) return null;\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className={`bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4 ${className}`}\r\n    >\r\n      <div className=\"flex items-start space-x-3\">\r\n        <AlertCircle className=\"w-5 h-5 text-red-600 dark:text-red-400 flex-shrink-0 mt-0.5\" />\r\n        <div>\r\n          <h3 className=\"text-sm font-josefin font-semibold text-red-800 dark:text-red-200 mb-2\">\r\n            Please fix the following errors:\r\n          </h3>\r\n          <ul className=\"text-sm text-red-700 dark:text-red-300 space-y-1\">\r\n            {Object.entries(errors).map(([field, error]) => (\r\n              <li key={field} className=\"flex items-center space-x-2\">\r\n                <span className=\"w-1 h-1 bg-red-600 rounded-full\"></span>\r\n                <span>{error}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\n// Form help text component\r\nexport function FormHelpText({\r\n  text,\r\n  type = 'info',\r\n  className = ''\r\n}: {\r\n  text: string;\r\n  type?: 'info' | 'warning' | 'success';\r\n  className?: string;\r\n}) {\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'warning':\r\n        return <AlertCircle className=\"w-4 h-4 text-yellow-600 dark:text-yellow-400\" />;\r\n      case 'success':\r\n        return <CheckCircle className=\"w-4 h-4 text-green-600 dark:text-green-400\" />;\r\n      default:\r\n        return <Info className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" />;\r\n    }\r\n  };\r\n\r\n  const getBackgroundColor = () => {\r\n    switch (type) {\r\n      case 'warning':\r\n        return 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800';\r\n      case 'success':\r\n        return 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800';\r\n      default:\r\n        return 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800';\r\n    }\r\n  };\r\n\r\n  const getTextColor = () => {\r\n    switch (type) {\r\n      case 'warning':\r\n        return 'text-yellow-800 dark:text-yellow-200';\r\n      case 'success':\r\n        return 'text-green-800 dark:text-green-200';\r\n      default:\r\n        return 'text-blue-800 dark:text-blue-200';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`flex items-start space-x-2 p-3 rounded-lg border ${getBackgroundColor()} ${className}`}>\r\n      {getIcon()}\r\n      <p className={`text-sm font-josefin ${getTextColor()}`}>\r\n        {text}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { CheckCircle, AlertCircle, Eye, EyeOff, X, Info } from 'lucide-react';\r\nimport { useToastNotifications } from '@/components/ui/Toast';\r\n\r\n// Validation rules interface\r\nexport interface ValidationRule {\r\n  required?: boolean;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  pattern?: RegExp;\r\n  custom?: (value: string) => string | null;\r\n  message?: string;\r\n}\r\n\r\n// Field validation interface\r\nexport interface FieldValidation {\r\n  [key: string]: ValidationRule[];\r\n}\r\n\r\n// Form state interface\r\nexport interface FormState {\r\n  values: { [key: string]: string };\r\n  errors: { [key: string]: string };\r\n  touched: { [key: string]: boolean };\r\n  isValid: boolean;\r\n  isSubmitting: boolean;\r\n}\r\n\r\n// Validation hook\r\nexport function useFormValidation(\r\n  initialValues: { [key: string]: string },\r\n  validationRules: FieldValidation,\r\n  onSubmit: (values: { [key: string]: string }) => Promise<void>\r\n) {\r\n  const [formState, setFormState] = useState<FormState>({\r\n    values: initialValues,\r\n    errors: {},\r\n    touched: {},\r\n    isValid: false,\r\n    isSubmitting: false\r\n  });\r\n\r\n  const { showSuccess, showError } = useToastNotifications();\r\n\r\n  // Validate single field\r\n  const validateField = (name: string, value: string): string | null => {\r\n    const rules = validationRules[name] || [];\r\n    \r\n    for (const rule of rules) {\r\n      if (rule.required && (!value || value.trim() === '')) {\r\n        return rule.message || `${name} is required`;\r\n      }\r\n      \r\n      if (value && rule.minLength && value.length < rule.minLength) {\r\n        return rule.message || `${name} must be at least ${rule.minLength} characters`;\r\n      }\r\n      \r\n      if (value && rule.maxLength && value.length > rule.maxLength) {\r\n        return rule.message || `${name} must be no more than ${rule.maxLength} characters`;\r\n      }\r\n      \r\n      if (value && rule.pattern && !rule.pattern.test(value)) {\r\n        return rule.message || `${name} format is invalid`;\r\n      }\r\n      \r\n      if (value && rule.custom) {\r\n        const customError = rule.custom(value);\r\n        if (customError) {\r\n          return customError;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  // Validate all fields\r\n  const validateForm = (): boolean => {\r\n    const errors: { [key: string]: string } = {};\r\n    let isValid = true;\r\n\r\n    Object.keys(validationRules).forEach(fieldName => {\r\n      const error = validateField(fieldName, formState.values[fieldName]);\r\n      if (error) {\r\n        errors[fieldName] = error;\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setFormState(prev => ({\r\n      ...prev,\r\n      errors,\r\n      isValid\r\n    }));\r\n\r\n    return isValid;\r\n  };\r\n\r\n  // Handle field change\r\n  const handleChange = (name: string, value: string) => {\r\n    setFormState(prev => ({\r\n      ...prev,\r\n      values: {\r\n        ...prev.values,\r\n        [name]: value\r\n      },\r\n      errors: {\r\n        ...prev.errors,\r\n        [name]: ''\r\n      }\r\n    }));\r\n  };\r\n\r\n  // Handle field blur\r\n  const handleBlur = (name: string) => {\r\n    const error = validateField(name, formState.values[name]);\r\n    setFormState(prev => ({\r\n      ...prev,\r\n      touched: {\r\n        ...prev.touched,\r\n        [name]: true\r\n      },\r\n      errors: {\r\n        ...prev.errors,\r\n        [name]: error || ''\r\n      }\r\n    }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // Mark all fields as touched\r\n    const touched: { [key: string]: boolean } = {};\r\n    Object.keys(validationRules).forEach(fieldName => {\r\n      touched[fieldName] = true;\r\n    });\r\n\r\n    setFormState(prev => ({\r\n      ...prev,\r\n      touched\r\n    }));\r\n\r\n    // Validate form\r\n    if (!validateForm()) {\r\n      showError('Please fix the errors below', 'Form validation failed');\r\n      return;\r\n    }\r\n\r\n    setFormState(prev => ({ ...prev, isSubmitting: true }));\r\n\r\n    try {\r\n      await onSubmit(formState.values);\r\n      showSuccess('Form submitted successfully!', 'Your information has been saved');\r\n    } catch (error) {\r\n      showError('Submission failed', error instanceof Error ? error.message : 'Please try again');\r\n    } finally {\r\n      setFormState(prev => ({ ...prev, isSubmitting: false }));\r\n    }\r\n  };\r\n\r\n  // Reset form\r\n  const resetForm = () => {\r\n    setFormState({\r\n      values: initialValues,\r\n      errors: {},\r\n      touched: {},\r\n      isValid: false,\r\n      isSubmitting: false\r\n    });\r\n  };\r\n\r\n  return {\r\n    formState,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    resetForm,\r\n    validateField,\r\n    validateForm\r\n  };\r\n}\r\n\r\n// Enhanced input component with validation\r\nexport function ValidatedInput({\r\n  name,\r\n  label,\r\n  type = 'text',\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  onBlur,\r\n  error,\r\n  touched,\r\n  required = false,\r\n  disabled = false,\r\n  className = '',\r\n  autoComplete,\r\n  maxLength,\r\n  minLength,\r\n  pattern,\r\n  description,\r\n  successMessage,\r\n  showSuccessIcon = false\r\n}: {\r\n  name: string;\r\n  label: string;\r\n  type?: 'text' | 'email' | 'password' | 'tel' | 'url' | 'number';\r\n  placeholder?: string;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  onBlur?: () => void;\r\n  error?: string;\r\n  touched?: boolean;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  autoComplete?: string;\r\n  maxLength?: number;\r\n  minLength?: number;\r\n  pattern?: string;\r\n  description?: string;\r\n  successMessage?: string;\r\n  showSuccessIcon?: boolean;\r\n}) {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const hasError = touched && error;\r\n  const hasSuccess = touched && !error && value && successMessage;\r\n  const isValid = touched && !error && value;\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsFocused(false);\r\n    if (onBlur) {\r\n      onBlur();\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const inputType = type === 'password' && showPassword ? 'text' : type;\r\n\r\n  return (\r\n    <div className={`space-y-2 ${className}`}>\r\n      {/* Label */}\r\n      <label className=\"block text-sm font-josefin font-semibold text-font-primary dark:text-ivory-white\">\r\n        {label}\r\n        {required && (\r\n          <span className=\"text-red-500 ml-1\" aria-label=\"required\">\r\n            *\r\n          </span>\r\n        )}\r\n      </label>\r\n\r\n      {/* Description */}\r\n      {description && (\r\n        <p className=\"text-sm text-font-secondary dark:text-font-secondary-dark\">\r\n          {description}\r\n        </p>\r\n      )}\r\n\r\n      {/* Input Container */}\r\n      <div className=\"relative\">\r\n        <input\r\n          ref={inputRef}\r\n          type={inputType}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleChange}\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          placeholder={placeholder}\r\n          required={required}\r\n          disabled={disabled}\r\n          autoComplete={autoComplete}\r\n          maxLength={maxLength}\r\n          minLength={minLength}\r\n          pattern={pattern}\r\n          className={`w-full px-4 py-3 border rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 ${\r\n            hasError\r\n              ? 'border-red-500 bg-red-50 dark:bg-red-900/20 focus:ring-red-500'\r\n              : hasSuccess\r\n              ? 'border-green-500 bg-green-50 dark:bg-green-900/20 focus:ring-green-500'\r\n              : isValid\r\n              ? 'border-green-500 bg-green-50 dark:bg-green-900/20 focus:ring-green-500'\r\n              : isFocused\r\n              ? 'border-soft-gold focus:ring-soft-gold'\r\n              : 'border-elegant-base dark:border-elegant-base bg-white dark:bg-deep-black'\r\n          } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n          aria-invalid={hasError}\r\n          aria-describedby={\r\n            hasError ? `${name}-error` : \r\n            hasSuccess ? `${name}-success` : \r\n            description ? `${name}-description` : undefined\r\n          }\r\n        />\r\n\r\n        {/* Password visibility toggle */}\r\n        {type === 'password' && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={togglePasswordVisibility}\r\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-font-secondary dark:text-font-secondary-dark hover:text-font-primary dark:hover:text-ivory-white transition-colors focus:outline-none focus:ring-2 focus:ring-soft-gold focus:ring-offset-2 rounded\"\r\n            aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n          >\r\n            {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\r\n          </button>\r\n        )}\r\n\r\n        {/* Status Icons */}\r\n        <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\r\n          {hasError && (\r\n            <AlertCircle className=\"w-5 h-5 text-red-500\" aria-label=\"Error\" />\r\n          )}\r\n          {hasSuccess && showSuccessIcon && (\r\n            <CheckCircle className=\"w-5 h-5 text-green-500\" aria-label=\"Success\" />\r\n          )}\r\n          {isValid && !hasSuccess && (\r\n            <CheckCircle className=\"w-5 h-5 text-green-500\" aria-label=\"Valid\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      <AnimatePresence>\r\n        {hasError && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -10 }}\r\n            id={`${name}-error`}\r\n            className=\"text-sm text-red-600 dark:text-red-400 flex items-center space-x-1\"\r\n            role=\"alert\"\r\n            aria-live=\"polite\"\r\n          >\r\n            <AlertCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span>{error}</span>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Success Message */}\r\n      <AnimatePresence>\r\n        {hasSuccess && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -10 }}\r\n            id={`${name}-success`}\r\n            className=\"text-sm text-green-600 dark:text-green-400 flex items-center space-x-1\"\r\n            role=\"status\"\r\n            aria-live=\"polite\"\r\n          >\r\n            <CheckCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span>{successMessage}</span>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Character Count */}\r\n      {maxLength && (\r\n        <div className=\"text-xs text-font-secondary dark:text-font-secondary-dark text-right\">\r\n          <span className={value.length > maxLength * 0.9 ? 'text-yellow-600 dark:text-yellow-400' : ''}>\r\n            {value.length}/{maxLength} characters\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Enhanced textarea component\r\nexport function ValidatedTextarea({\r\n  name,\r\n  label,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  onBlur,\r\n  error,\r\n  touched,\r\n  required = false,\r\n  disabled = false,\r\n  className = '',\r\n  maxLength,\r\n  minLength,\r\n  description,\r\n  successMessage,\r\n  rows = 4\r\n}: {\r\n  name: string;\r\n  label: string;\r\n  placeholder?: string;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  onBlur?: () => void;\r\n  error?: string;\r\n  touched?: boolean;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  maxLength?: number;\r\n  minLength?: number;\r\n  description?: string;\r\n  successMessage?: string;\r\n  rows?: number;\r\n}) {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  const hasError = touched && error;\r\n  const hasSuccess = touched && !error && value && successMessage;\r\n  const isValid = touched && !error && value;\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsFocused(false);\r\n    if (onBlur) {\r\n      onBlur();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`space-y-2 ${className}`}>\r\n      {/* Label */}\r\n      <label className=\"block text-sm font-josefin font-semibold text-font-primary dark:text-ivory-white\">\r\n        {label}\r\n        {required && (\r\n          <span className=\"text-red-500 ml-1\" aria-label=\"required\">\r\n            *\r\n          </span>\r\n        )}\r\n      </label>\r\n\r\n      {/* Description */}\r\n      {description && (\r\n        <p className=\"text-sm text-font-secondary dark:text-font-secondary-dark\">\r\n          {description}\r\n        </p>\r\n      )}\r\n\r\n      {/* Textarea */}\r\n      <textarea\r\n        name={name}\r\n        value={value}\r\n        onChange={handleChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        placeholder={placeholder}\r\n        required={required}\r\n        disabled={disabled}\r\n        maxLength={maxLength}\r\n        minLength={minLength}\r\n        rows={rows}\r\n        className={`w-full px-4 py-3 border rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 resize-vertical ${\r\n          hasError\r\n            ? 'border-red-500 bg-red-50 dark:bg-red-900/20 focus:ring-red-500'\r\n            : hasSuccess\r\n            ? 'border-green-500 bg-green-50 dark:bg-green-900/20 focus:ring-green-500'\r\n            : isValid\r\n            ? 'border-green-500 bg-green-50 dark:bg-green-900/20 focus:ring-green-500'\r\n            : isFocused\r\n            ? 'border-soft-gold focus:ring-soft-gold'\r\n            : 'border-elegant-base dark:border-elegant-base bg-white dark:bg-deep-black'\r\n        } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n        aria-invalid={hasError}\r\n        aria-describedby={\r\n          hasError ? `${name}-error` : \r\n          hasSuccess ? `${name}-success` : \r\n          description ? `${name}-description` : undefined\r\n        }\r\n      />\r\n\r\n      {/* Error Message */}\r\n      <AnimatePresence>\r\n        {hasError && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -10 }}\r\n            id={`${name}-error`}\r\n            className=\"text-sm text-red-600 dark:text-red-400 flex items-center space-x-1\"\r\n            role=\"alert\"\r\n            aria-live=\"polite\"\r\n          >\r\n            <AlertCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span>{error}</span>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Success Message */}\r\n      <AnimatePresence>\r\n        {hasSuccess && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -10 }}\r\n            id={`${name}-success`}\r\n            className=\"text-sm text-green-600 dark:text-green-400 flex items-center space-x-1\"\r\n            role=\"status\"\r\n            aria-live=\"polite\"\r\n          >\r\n            <CheckCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span>{successMessage}</span>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Character Count */}\r\n      {maxLength && (\r\n        <div className=\"text-xs text-font-secondary dark:text-font-secondary-dark text-right\">\r\n          <span className={value.length > maxLength * 0.9 ? 'text-yellow-600 dark:text-yellow-400' : ''}>\r\n            {value.length}/{maxLength} characters\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Enhanced select component\r\nexport function ValidatedSelect({\r\n  name,\r\n  label,\r\n  value,\r\n  onChange,\r\n  onBlur,\r\n  error,\r\n  touched,\r\n  required = false,\r\n  disabled = false,\r\n  className = '',\r\n  options,\r\n  placeholder,\r\n  description,\r\n  successMessage\r\n}: {\r\n  name: string;\r\n  label: string;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  onBlur?: () => void;\r\n  error?: string;\r\n  touched?: boolean;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  options: { value: string; label: string; disabled?: boolean }[];\r\n  placeholder?: string;\r\n  description?: string;\r\n  successMessage?: string;\r\n}) {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  const hasError = touched && error;\r\n  const hasSuccess = touched && !error && value && successMessage;\r\n  const isValid = touched && !error && value;\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsFocused(false);\r\n    if (onBlur) {\r\n      onBlur();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`space-y-2 ${className}`}>\r\n      {/* Label */}\r\n      <label className=\"block text-sm font-josefin font-semibold text-font-primary dark:text-ivory-white\">\r\n        {label}\r\n        {required && (\r\n          <span className=\"text-red-500 ml-1\" aria-label=\"required\">\r\n            *\r\n          </span>\r\n        )}\r\n      </label>\r\n\r\n      {/* Description */}\r\n      {description && (\r\n        <p className=\"text-sm text-font-secondary dark:text-font-secondary-dark\">\r\n          {description}\r\n        </p>\r\n      )}\r\n\r\n      {/* Select */}\r\n      <div className=\"relative\">\r\n        <select\r\n          name={name}\r\n          value={value}\r\n          onChange={handleChange}\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          required={required}\r\n          disabled={disabled}\r\n          className={`w-full px-4 py-3 border rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 appearance-none ${\r\n            hasError\r\n              ? 'border-red-500 bg-red-50 dark:bg-red-900/20 focus:ring-red-500'\r\n              : hasSuccess\r\n              ? 'border-green-500 bg-green-50 dark:bg-green-900/20 focus:ring-green-500'\r\n              : isValid\r\n              ? 'border-green-500 bg-green-50 dark:bg-green-900/20 focus:ring-green-500'\r\n              : isFocused\r\n              ? 'border-soft-gold focus:ring-soft-gold'\r\n              : 'border-elegant-base dark:border-elegant-base bg-white dark:bg-deep-black'\r\n          } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n          aria-invalid={hasError}\r\n          aria-describedby={\r\n            hasError ? `${name}-error` : \r\n            hasSuccess ? `${name}-success` : \r\n            description ? `${name}-description` : undefined\r\n          }\r\n        >\r\n          {placeholder && (\r\n            <option value=\"\" disabled>\r\n              {placeholder}\r\n            </option>\r\n          )}\r\n          {options.map((option) => (\r\n            <option\r\n              key={option.value}\r\n              value={option.value}\r\n              disabled={option.disabled}\r\n            >\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {/* Custom dropdown arrow */}\r\n        <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 pointer-events-none\">\r\n          <svg className=\"w-5 h-5 text-font-secondary dark:text-font-secondary-dark\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n          </svg>\r\n        </div>\r\n\r\n        {/* Status Icons */}\r\n        <div className=\"absolute right-8 top-1/2 transform -translate-y-1/2\">\r\n          {hasError && (\r\n            <AlertCircle className=\"w-5 h-5 text-red-500\" aria-label=\"Error\" />\r\n          )}\r\n          {hasSuccess && (\r\n            <CheckCircle className=\"w-5 h-5 text-green-500\" aria-label=\"Success\" />\r\n          )}\r\n          {isValid && !hasSuccess && (\r\n            <CheckCircle className=\"w-5 h-5 text-green-500\" aria-label=\"Valid\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      <AnimatePresence>\r\n        {hasError && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -10 }}\r\n            id={`${name}-error`}\r\n            className=\"text-sm text-red-600 dark:text-red-400 flex items-center space-x-1\"\r\n            role=\"alert\"\r\n            aria-live=\"polite\"\r\n          >\r\n            <AlertCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span>{error}</span>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Success Message */}\r\n      <AnimatePresence>\r\n        {hasSuccess && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -10 }}\r\n            id={`${name}-success`}\r\n            className=\"text-sm text-green-600 dark:text-green-400 flex items-center space-x-1\"\r\n            role=\"status\"\r\n            aria-live=\"polite\"\r\n          >\r\n            <CheckCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span>{successMessage}</span>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Form progress indicator\r\nexport function FormProgress({\r\n  currentStep,\r\n  totalSteps,\r\n  className = ''\r\n}: {\r\n  currentStep: number;\r\n  totalSteps: number;\r\n  className?: string;\r\n}) {\r\n  const progress = (currentStep / totalSteps) * 100;\r\n\r\n  return (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <div className=\"flex justify-between text-sm font-josefin text-font-secondary dark:text-font-secondary-dark\">\r\n        <span>Step {currentStep} of {totalSteps}</span>\r\n        <span>{Math.round(progress)}% complete</span>\r\n      </div>\r\n      \r\n      <div className=\"w-full bg-elegant-base/20 rounded-full h-2\">\r\n        <motion.div\r\n          className=\"bg-soft-gold h-2 rounded-full\"\r\n          initial={{ width: 0 }}\r\n          animate={{ width: `${progress}%` }}\r\n          transition={{ duration: 0.5, ease: 'easeOut' }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Form success state\r\nexport function FormSuccess({\r\n  title,\r\n  message,\r\n  onClose,\r\n  className = ''\r\n}: {\r\n  title: string;\r\n  message: string;\r\n  onClose?: () => void;\r\n  className?: string;\r\n}) {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, scale: 0.95 }}\r\n      animate={{ opacity: 1, scale: 1 }}\r\n      className={`bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-6 ${className}`}\r\n    >\r\n      <div className=\"flex items-start space-x-3\">\r\n        <div className=\"flex-shrink-0\">\r\n          <CheckCircle className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n        </div>\r\n        \r\n        <div className=\"flex-1\">\r\n          <h3 className=\"text-lg font-cormorant font-bold text-green-800 dark:text-green-200 mb-2\">\r\n            {title}\r\n          </h3>\r\n          <p className=\"text-green-700 dark:text-green-300 font-josefin\">\r\n            {message}\r\n          </p>\r\n        </div>\r\n        \r\n        {onClose && (\r\n          <button\r\n            onClick={onClose}\r\n            className=\"flex-shrink-0 text-green-600 dark:text-green-400 hover:text-green-800 dark:hover:text-green-200 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 rounded\"\r\n            aria-label=\"Close success message\"\r\n          >\r\n            <X className=\"w-5 h-5\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}