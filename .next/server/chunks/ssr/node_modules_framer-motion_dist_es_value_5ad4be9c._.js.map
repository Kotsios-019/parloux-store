{"version":3,"sources":["turbopack:///[project]/node_modules/framer-motion/dist/es/value/use-scroll.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs","turbopack:///[project]/node_modules/motion-dom/dist/es/scroll/observe.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/utils/get-timeline.mjs","turbopack:///[project]/node_modules/motion-dom/dist/es/resize/handle-element.mjs","turbopack:///[project]/node_modules/motion-dom/dist/es/resize/handle-window.mjs","turbopack:///[project]/node_modules/motion-dom/dist/es/resize/index.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/attach-animation.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/render/dom/scroll/attach-function.mjs","turbopack:///[project]/node_modules/motion-dom/dist/es/utils/transform.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/value/use-transform.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/value/use-combine-values.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/value/use-motion-value.mjs","turbopack:///[project]/node_modules/framer-motion/dist/es/value/use-computed.mjs"],"sourcesContent":["\"use client\";\nimport { motionValue } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { useRef, useCallback, useEffect } from 'react';\nimport { scroll } from '../render/dom/scroll/index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nconst isRefPending = (ref) => {\n    if (!ref)\n        return false;\n    return !ref.current;\n};\nfunction useScroll({ container, target, ...options } = {}) {\n    const values = useConstant(createScrollMotionValues);\n    const scrollAnimation = useRef(null);\n    const needsStart = useRef(false);\n    const start = useCallback(() => {\n        scrollAnimation.current = scroll((_progress, { x, y, }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, {\n            ...options,\n            container: container?.current || undefined,\n            target: target?.current || undefined,\n        });\n        return () => {\n            scrollAnimation.current?.();\n        };\n    }, [container, target, JSON.stringify(options.offset)]);\n    useIsomorphicLayoutEffect(() => {\n        needsStart.current = false;\n        if (isRefPending(container) || isRefPending(target)) {\n            needsStart.current = true;\n            return;\n        }\n        else {\n            return start();\n        }\n    }, [start]);\n    useEffect(() => {\n        if (needsStart.current) {\n            invariant(!isRefPending(container), \"Container ref is defined but not hydrated\", \"use-scroll-ref\");\n            invariant(!isRefPending(target), \"Target ref is defined but not hydrated\", \"use-scroll-ref\");\n            return start();\n        }\n        else {\n            return;\n        }\n    }, [start]);\n    return values;\n}\n\nexport { useScroll };\n","import { noop } from 'motion-utils';\nimport { attachToAnimation } from './attach-animation.mjs';\nimport { attachToFunction } from './attach-function.mjs';\n\nfunction scroll(onScroll, { axis = \"y\", container = document.scrollingElement, ...options } = {}) {\n    if (!container)\n        return noop;\n    const optionsWithDefaults = { axis, container, ...options };\n    return typeof onScroll === \"function\"\n        ? attachToFunction(onScroll, optionsWithDefaults)\n        : attachToAnimation(onScroll, optionsWithDefaults);\n}\n\nexport { scroll };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.preUpdate(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { supportsScrollTimeline } from 'motion-dom';\nimport { scrollInfo } from '../track.mjs';\n\nconst timelineCache = new Map();\nfunction scrollTimelineFallback(options) {\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[options.axis].progress * 100;\n    }, options);\n    return { currentTime, cancel };\n}\nfunction getTimeline({ source, container, ...options }) {\n    const { axis } = options;\n    if (source)\n        container = source;\n    const containerCache = timelineCache.get(container) ?? new Map();\n    timelineCache.set(container, containerCache);\n    const targetKey = options.target ?? \"self\";\n    const targetCache = containerCache.get(targetKey) ?? {};\n    const axisKey = axis + (options.offset ?? []).join(\",\");\n    if (!targetCache[axisKey]) {\n        targetCache[axisKey] =\n            !options.target && supportsScrollTimeline()\n                ? new ScrollTimeline({ source: container, axis })\n                : scrollTimelineFallback({ container, ...options });\n    }\n    return targetCache[axisKey];\n}\n\nexport { getTimeline };\n","import { isSVGElement } from '../utils/is-svg-element.mjs';\nimport { resolveElements } from '../utils/resolve-elements.mjs';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nconst getSize = (borderBoxAxis, svgAxis, htmlAxis) => (target, borderBoxSize) => {\n    if (borderBoxSize && borderBoxSize[0]) {\n        return borderBoxSize[0][(borderBoxAxis + \"Size\")];\n    }\n    else if (isSVGElement(target) && \"getBBox\" in target) {\n        return target.getBBox()[svgAxis];\n    }\n    else {\n        return target[htmlAxis];\n    }\n};\nconst getWidth = /*@__PURE__*/ getSize(\"inline\", \"width\", \"offsetWidth\");\nconst getHeight = /*@__PURE__*/ getSize(\"block\", \"height\", \"offsetHeight\");\nfunction notifyTarget({ target, borderBoxSize }) {\n    resizeHandlers.get(target)?.forEach((handler) => {\n        handler(target, {\n            get width() {\n                return getWidth(target, borderBoxSize);\n            },\n            get height() {\n                return getHeight(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer?.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers?.delete(handler);\n            if (!elementHandlers?.size) {\n                observer?.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n","const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const info = {\n            get width() {\n                return window.innerWidth;\n            },\n            get height() {\n                return window.innerHeight;\n            },\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size &&\n            typeof windowResizeHandler === \"function\") {\n            window.removeEventListener(\"resize\", windowResizeHandler);\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n","import { resizeElement } from './handle-element.mjs';\nimport { resizeWindow } from './handle-window.mjs';\n\nfunction resize(a, b) {\n    return typeof a === \"function\" ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n","import { progress, velocityPerSecond } from 'motion-utils';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[`scroll${position}`];\n    axis.scrollLength = element[`scroll${length}`] - element[`client${length}`];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","import { interpolate, defaultOffset } from 'motion-dom';\nimport { clamp } from 'motion-utils';\nimport { calcInset } from './inset.mjs';\nimport { resolveOffset } from './offset.mjs';\nimport { ScrollOffset } from './presets.mjs';\n\nconst point = { x: 0, y: 0 };\nfunction getTargetSize(target) {\n    return \"getBBox\" in target && target.tagName !== \"svg\"\n        ? target.getBBox()\n        : { width: target.clientWidth, height: target.clientHeight };\n}\nfunction resolveOffsets(container, info, options) {\n    const { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : getTargetSize(target);\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition), { clamp: false });\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = clamp(0, 1, info[axis].interpolate(info[axis].current));\n}\n\nexport { resolveOffsets };\n","import { isHTMLElement } from 'motion-dom';\n\nfunction calcInset(element, container) {\n    const inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (isHTMLElement(current)) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current.tagName === \"svg\") {\n            /**\n             * This isn't an ideal approach to measuring the offset of <svg /> tags.\n             * It would be preferable, given they behave like HTMLElements in most ways\n             * to use offsetLeft/Top. But these don't exist on <svg />. Likewise we\n             * can't use .getBBox() like most SVG elements as these provide the offset\n             * relative to the SVG itself, which for <svg /> is usually 0x0.\n             */\n            const svgBoundingBox = current.getBoundingClientRect();\n            current = current.parentElement;\n            const parentBoundingBox = current.getBoundingClientRect();\n            inset.x += svgBoundingBox.left - parentBoundingBox.left;\n            inset.y += svgBoundingBox.top - parentBoundingBox.top;\n        }\n        else if (current instanceof SVGGraphicsElement) {\n            const { x, y } = current.getBBox();\n            inset.x += x;\n            inset.y += y;\n            let svg = null;\n            let parent = current.parentNode;\n            while (!svg) {\n                if (parent.tagName === \"svg\") {\n                    svg = parent;\n                }\n                parent = current.parentNode;\n            }\n            current = svg;\n        }\n        else {\n            break;\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (edge in namedEdges) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { resolveEdge, namedEdges } from './edge.mjs';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","import { warnOnce } from 'motion-utils';\nimport { updateScrollInfo } from './info.mjs';\nimport { resolveOffsets } from './offsets/index.mjs';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n    /**\n     * In development mode ensure scroll containers aren't position: static as this makes\n     * it difficult to measure their relative positions.\n     */\n    if (process.env.NODE_ENV !== \"production\") {\n        if (container && target && target !== container) {\n            warnOnce(getComputedStyle(container).position !== \"static\", \"Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.\");\n        }\n    }\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: (time) => {\n            measure(element, options.target, info);\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nexport { createOnScrollHandler };\n","import { resize, frame, cancelFrame, frameData } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.scrollingElement ? window : element;\nfunction scrollInfo(onScroll, { container = document.scrollingElement, ...options } = {}) {\n    if (!container)\n        return noop;\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers) {\n                handler.measure(frameData.timestamp);\n            }\n            frame.preUpdate(notifyAll);\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers) {\n                handler.notify();\n            }\n        };\n        const listener = () => frame.read(measureAll);\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n        listener();\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            resizeListeners.get(container)?.();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scrollInfo };\n","import { observeTimeline } from 'motion-dom';\nimport { getTimeline } from './utils/get-timeline.mjs';\n\nfunction attachToAnimation(animation, options) {\n    const timeline = getTimeline(options);\n    return animation.attachTimeline({\n        timeline: options.target ? undefined : timeline,\n        observe: (valueAnimation) => {\n            valueAnimation.pause();\n            return observeTimeline((progress) => {\n                valueAnimation.time =\n                    valueAnimation.iterationDuration * progress;\n            }, timeline);\n        },\n    });\n}\n\nexport { attachToAnimation };\n","import { observeTimeline } from 'motion-dom';\nimport { scrollInfo } from './track.mjs';\nimport { getTimeline } from './utils/get-timeline.mjs';\n\n/**\n * If the onScroll function has two arguments, it's expecting\n * more specific information about the scroll from scrollInfo.\n */\nfunction isOnScrollWithInfo(onScroll) {\n    return onScroll.length === 2;\n}\nfunction attachToFunction(onScroll, options) {\n    if (isOnScrollWithInfo(onScroll)) {\n        return scrollInfo((info) => {\n            onScroll(info[options.axis].progress, info);\n        }, options);\n    }\n    else {\n        return observeTimeline(onScroll, getTimeline(options));\n    }\n}\n\nexport { attachToFunction };\n","import { interpolate } from './interpolate.mjs';\n\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, options);\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","\"use client\";\nimport { transform } from 'motion-dom';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","\"use client\";\nimport { cancelFrame, frame } from 'motion-dom';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","\"use client\";\nimport { motionValue } from 'motion-dom';\nimport { useContext, useState, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","\"use client\";\nimport { collectMotionValues } from 'motion-dom';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n"],"names":[],"mappings":"2CIII,ECHA,iCLAJ,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,KACA,EAAA,EAAA,CAAA,CAAA,OCHA,EAAA,EAAA,CAAA,CAAA,OCAA,EAAA,EAAA,CAAA,CAAA,OAEA,SAAS,EAAgB,CAAM,CAAE,CAAQ,EAErC,IADI,EACE,EAAU,KACZ,GAAM,aAAE,CAAW,CAAE,CAAG,EAElB,EADa,AACF,CADkB,SAAO,EAAI,EAAY,KAAA,AAAK,EACjC,IAC1B,IAAiB,GACjB,EAAO,GAEX,EAH+B,AAGhB,CACnB,EAEA,OADA,EAAA,KAAK,CAAC,SAAS,CAAC,GAAS,GAClB,IAAM,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,EAC7B,CCfA,IAAA,EAAA,EAAA,CAAA,CAAA,OCAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAEA,IAAM,EAAiB,IAAI,QAErB,EAAU,CAAC,EAAe,EAAS,IAAa,CAAC,EAAQ,IACvD,AAAJ,GAAqB,CAAa,CAAC,EAAE,CAC1B,CAD4B,AACf,CAAC,EAAE,CAAE,EAAgB,OAAQ,CAE5C,CAAA,EAAA,EAAA,YAAY,AAAZ,EAAa,IAAW,YAAa,EACnC,EAAO,IADoC,GAC7B,EAAE,CAAC,EAAQ,CAGzB,CAAM,CAAC,EAAS,CAGzB,EAAyB,EAAQ,OAAtB,EAAgC,QAAS,CAA9B,cACtB,EAA0B,EAAQ,QAAtB,AAA+B,SAAU,EAA9B,cAC7B,SAAS,EAAa,QAAE,CAAM,CAAE,eAAa,CAAE,EAC3C,EAAe,GAAG,CAAC,IAAS,QAAQ,AAAC,IACjC,EAAQ,EAAQ,CACZ,IAAI,OAAQ,CACR,OAAO,EAAS,EAAQ,EAC5B,EACA,IAAI,QAAS,CACT,OAAO,EAAU,EAAQ,EAC7B,CACJ,EACJ,EACJ,CACA,SAAS,EAAU,CAAO,EACtB,EAAQ,OAAO,CAAC,EACpB,CChCA,IAAM,EAAkB,IAAI,IEA5B,IAAA,EAAA,EAAA,CAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,OAMA,IAAM,EAAiB,IAAM,CAAC,CAC1B,QAAS,EACT,OAAQ,EAAE,CACV,SAAU,EACV,aAAc,EACd,aAAc,EACd,aAAc,EACd,gBAAiB,EACjB,SAAU,EACd,CAAC,CAMK,EAAO,CACT,EAAG,CACC,OAAQ,QACR,SAAU,MACd,EACA,EAAG,CACC,OAAQ,SACR,SAAU,KACd,CACJ,EACA,SAAS,EAAe,CAAO,CAAE,CAAQ,CAAE,CAAI,CAAE,CAAI,EACjD,IAAM,EAAO,CAAI,CAAC,EAAS,CACrB,CAAE,QAAM,UAAE,CAAQ,CAAE,CAAG,CAAI,CAAC,EAAS,CACrC,EAAO,EAAK,OAAO,CACnB,EAAW,EAAK,IAAI,AAC1B,GAAK,OAAO,CAAG,CAAO,CAAC,CAAC,MAAM,EAAE,EAAA,CAAU,CAAC,CAC3C,EAAK,YAAY,CAAG,CAAO,CAAC,CAAC,MAAM,EAAE,EAAA,CAAQ,CAAC,CAAG,CAAO,CAAC,CAAC,MAAM,EAAE,EAAA,CAAQ,CAAC,CAC3E,EAAK,MAAM,CAAC,MAAM,CAAG,EACrB,EAAK,MAAM,CAAC,EAAE,CAAG,EACjB,EAAK,MAAM,CAAC,EAAE,CAAG,EAAK,YAAY,CAClC,EAAK,QAAQ,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,EAAG,EAAK,YAAY,CAAE,EAAK,OAAO,EAC3D,IAAM,EAAU,EAAO,EACvB,EAAK,QAAQ,CACT,EAvCW,GAwCL,EACA,CAAA,EAFI,AAEJ,EAAA,iBAAiB,AAAjB,EAAkB,EAAK,OAAO,CAAG,EAAM,EACrD,CC/CA,IAAA,EAAA,EAAA,CAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OCDA,EAAA,EAAA,CAAA,CAAA,OCAA,IAAM,EAAa,CACf,MAAO,EACP,OAAQ,GACR,IAAK,CACT,EACA,SAAS,EAAY,CAAI,CAAE,CAAM,CAAE,EAAQ,CAAC,EACxC,IAAI,EAAQ,EAWZ,GANI,KAAQ,GACR,GAAO,CAAU,CAAC,EAAA,AAAK,EAKP,AANI,UAMpB,OAAO,EAAmB,CAC1B,IAAM,EAAW,WAAW,GACxB,EAAK,QAAQ,CAAC,MACd,CADqB,CACb,EAEH,EAAK,QAAQ,CAAC,KACnB,CADyB,CAClB,EAAW,IAEb,EAAK,QAAQ,CAAC,MACnB,CAD0B,CACjB,EAAW,IAAO,SAAS,eAAe,CAAC,WAAW,CAE1D,EAAK,QAAQ,CAAC,MACnB,CAD0B,CACjB,EAAW,IAAO,SAAS,eAAe,CAAC,YAAY,CAGhE,EAAO,CAEf,CAOA,MAHoB,UAAhB,AAA0B,OAAnB,IACP,EAAQ,EAAS,CAAA,EAEd,EAAQ,CACnB,CCxCA,IAAM,EAAgB,CAAC,EAAG,EAAE,CCFtB,EAAe,CAajB,IAAK,CACD,CAAC,EAAG,EAAE,CACN,CAAC,EAAG,EAAE,CACT,AACL,EJXM,EAAQ,CAAE,EAAG,EAAG,EAAG,CAAE,EMDrB,EAAkB,IAAI,QACtB,EAAkB,IAAI,QACtB,EAAmB,IAAI,QACvB,EAAiB,AAAC,GAAY,IAAY,SAAS,gBAAgB,CAAG,OAAS,EACrF,SAAS,EAAW,CAAQ,CAAE,CAAE,YAAY,SAAS,gBAAgB,CAAE,GAAG,EAAS,CAAG,CAAC,CAAC,EACpF,GAAI,CAAC,EACD,OAAO,EAAA,IAAI,CACf,IAAI,EAAoB,EAAiB,GAAG,CAAC,GAKxC,IACD,EAAoB,IAAI,IACxB,EAAiB,GAFG,AAEA,CAAC,EAAW,IAMpC,IAAM,EAAmB,ADS7B,SAAS,AAAsB,CAAO,CAAE,CAAQ,CAAE,CAAI,CAAE,EAAU,CAAC,CAAC,EAChE,MAAO,CACH,QAAS,AAAC,KAhClB,AAiCY,SAjCH,AAAQ,CAAS,CAAE,EAAS,CAAS,CAAE,CAAI,EAMhD,GAFA,EAAK,CAAC,CAAC,YAAY,CAAG,EACtB,EAAK,CAAC,CAAC,YAAY,CAAG,EAClB,IAAW,EAAW,CACtB,IAAI,EAAO,EACX,KAAO,GAAQ,IAAS,GACpB,EAAK,CAAC,CAAC,GADwB,SACZ,EAAI,EAAK,UAAU,CACtC,EAAK,CAAC,CAAC,YAAY,EAAI,EAAK,SAAS,CACrC,EAAO,EAAK,YAAY,AAEhC,CACA,EAAK,CAAC,CAAC,YAAY,CACf,IAAW,EAAY,EAAO,WAAW,CAAG,EAAO,WAAW,CAClE,EAAK,CAAC,CAAC,YAAY,CACf,IAAW,EAAY,EAAO,YAAY,CAAG,EAAO,YAAY,CACpE,EAAK,CAAC,CAAC,eAAe,CAAG,EAAU,WAAW,CAC9C,EAAK,CAAC,CAAC,eAAe,CAAG,EAAU,YAUvC,AAVmD,EAc/B,EAAS,EAAQ,MAAM,CAAE,GNYzC,IAAwB,KAAK,CMXW,GNYxC,EADe,AAAoB,AMXV,ENYD,IMZU,CNYL,IAC7B,EADe,AAAoB,AAC9B,IAAI,GAAG,CMZA,EAAQ,MAAM,EAAI,EAAQ,MAAA,AAAM,EAAE,CL3BlD,AK4BgB,SL5BP,AAAe,CAAS,CAAE,CAAI,CAAE,CAAO,EAC5C,GAAM,CAAE,OAAQ,EAAmB,EAAa,GAAG,CAAE,CAAG,EAClD,QAAE,EAAS,CAAS,MAAE,EAAO,GAAG,CAAE,CAAG,EACrC,EAAc,AAAS,QAAM,SAAW,QACxC,EAAQ,IAAW,EAAY,ACdzC,SAAS,AAAU,CAAO,CAAE,CAAS,EACjC,IAAM,EAAQ,CAAE,EAAG,EAAG,EAAG,CAAE,EACvB,EAAU,EACd,KAAO,GAAW,IAAY,GAC1B,GAAI,CAAA,EAAA,CADiC,CACjC,aAAA,AAAa,EAAC,GACd,EAAM,CAAC,EAAI,EADa,AACL,UAAU,CAC7B,EAAM,CAAC,EAAI,EAAQ,SAAS,CAC5B,EAAU,EAAQ,YAAY,MAE7B,GAAwB,QAApB,EAAQ,OAAO,CAAY,CAQhC,IAAM,EAAiB,EAAQ,qBAAqB,GAE9C,EAAoB,CAD1B,EAAU,EAAQ,aAAA,AAAa,EACG,qBAAqB,GACvD,EAAM,CAAC,EAAI,EAAe,IAAI,CAAG,EAAkB,IAAI,CACvD,EAAM,CAAC,EAAI,EAAe,GAAG,CAAG,EAAkB,GAAG,AACzD,MACK,GAAI,aAAmB,mBAAoB,CAC5C,GAAM,GAAE,CAAC,GAAE,CAAC,CAAE,CAAG,EAAQ,OAAO,GAChC,EAAM,CAAC,EAAI,EACX,EAAM,CAAC,EAAI,EACX,IAAI,EAAM,KACN,EAAS,EAAQ,UAAU,CAC/B,KAAO,CAAC,GACmB,CADd,MACqB,CAA1B,EAAO,OAAO,GACd,EAAM,CAAA,EAEV,EAAS,EAAQ,UAAU,CAE/B,EAAU,CACd,MAEI,CADC,KAIT,OAAO,CACX,ED5BmD,EAAQ,GAAa,EAM9D,EAAa,IAAW,EACxB,CAAE,MAAO,EAAU,WAAW,CAAE,OAAQ,EAAU,YAAY,AAAC,EAf9D,EAgBD,WAhBc,EAA6B,QAAnB,EAAO,OAAO,CAgBxB,AAfd,EAAO,OAAO,GACd,CAAE,MAAO,EAAO,WAAW,CAAE,OAAQ,EAAO,YAAY,AAAC,EAezD,EAAgB,CAClB,MAAO,EAAU,WAAW,CAC5B,OAAQ,EAAU,YAAY,AAClC,EAKA,CAAI,CAAC,EAAK,CAAC,MAAM,CAAC,MAAM,CAAG,EAK3B,IAAI,EAAa,CAAC,CAAI,CAAC,EAAK,CAAC,WAAW,CAClC,EAAa,EAAiB,MAAM,CAC1C,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,IAAK,CACjC,IAAM,EAAS,AGtCvB,SAAS,AAAc,CAAM,CAAE,CAAe,CAAE,CAAY,CAAE,CAAW,EACrE,IAAI,EAAmB,MAAM,OAAO,CAAC,GAAU,EAAS,EACpD,EAAc,EA0BlB,MAxBsB,UAAlB,AAA4B,OAArB,EAMP,EAAmB,CAAC,EAAQ,EAAO,CAEZ,UAAlB,AAA4B,OAArB,IAGR,EADA,CADJ,EAAS,EAAO,IAAI,EAAA,EACT,QAAQ,CAAC,KACG,CADG,CACI,KAAK,CAAC,KAQb,CAAC,EAAQ,CAAU,CAAC,EAAO,CAAG,EAAS,CAAC,CAAC,CAAC,CAAC,EAK/D,CAFP,EAAc,EAAY,CAAgB,CAAC,EAAE,CAAE,EAAc,EAAA,AAExC,EADJ,EAAY,CAAgB,CAAC,EAAE,CAAE,EAEtD,EHSqC,CAAgB,CAAC,EAAE,CAAE,CAAa,CAAC,EAAY,CAAE,CAAU,CAAC,EAAY,CAAE,CAAK,CAAC,EAAK,CAC9G,CAAC,GAAc,IAAW,CAAI,CAAC,EAAK,CAAC,mBAAmB,CAAC,EAAE,EAAE,CAC7D,GAAa,CAAA,EAEjB,CAAI,CAAC,EAAK,CAAC,MAAM,CAAC,EAAE,CAAG,CAC3B,CAKI,IACA,CAAI,CAAC,EAAK,CAAC,GADC,QACU,CAAG,CAAA,EAAA,EAAA,WAAW,AAAX,EAAY,CAAI,CAAC,EAAK,CAAC,MAAM,CAAE,CAAA,EAAA,EAAA,aAAA,AAAa,EAAC,GAAmB,CAAE,OAAO,CAAM,GACxG,CAAI,CAAC,EAAK,CAAC,mBAAmB,CAAG,IAAI,CAAI,CAAC,EAAK,CAAC,MAAM,CAAC,EAE3D,CAAI,CAAC,EAAK,CAAC,QAAQ,CAAG,CAAA,EAAA,EAAA,KAAA,AAAK,EAAC,EAAG,EAAG,CAAI,CAAC,EAAK,CAAC,WAAW,CAAC,CAAI,CAAC,EAAK,CAAC,OAAO,EAC/E,EKhB+B,EAAS,EAAM,EAEtC,EACA,OAAQ,IAAM,EAAS,EAC3B,CACJ,ECpBmD,EAAW,EPT9B,CAC5B,KAAM,EACN,AOOoE,EPPjE,IACH,EAAG,GACP,CAAC,COK6E,GAM1E,GALA,EAAkB,GAAG,CAAC,GAKlB,CAAC,EAAgB,GAAG,CAAC,GAAY,CACjC,IAAM,EAAa,KACf,IAAK,IAAM,KAAW,EAClB,EAAQ,OAAO,CAAC,EAAA,IADqB,KACZ,CAAC,SAAS,EAEvC,EAAA,KAAK,CAAC,SAAS,CAAC,EACpB,EACM,EAAY,KACd,IAAK,IAAM,KAAW,EAClB,EAAQ,MAAM,EAEtB,EACM,EAAW,EAJ4B,EAItB,EAAA,KAAK,CAAC,IAAI,CAAC,GAClC,EAAgB,GAAG,CAAC,EAAW,GAC/B,IAAM,EAAS,EAAe,GAC9B,OAAO,gBAAgB,CAAC,SAAU,EAAU,CAAE,SAAS,CAAK,GACxD,IAAc,SAAS,eAAe,EAAE,AACxC,EAAgB,GAAG,CAAC,ER5CR,SQ4CmB,GR5ChC,CAA0B,MAAnB,AQ4CgC,GT/B9C,EAAgB,ECb8B,CDa3B,CAAC,GAChB,AAAC,IAfL,EAAsB,KAClB,IAAM,EAAO,CACT,GAcJ,CAdQ,OAAQ,CACR,OAAO,OAAO,UAAU,AAC5B,EACA,IAAI,QAAS,CACT,OAAO,OAAO,WAClB,AAD6B,CAEjC,EACA,EAAgB,OAAO,CAAC,AAAC,GAAa,EAAS,GACnD,EACA,OAAO,gBAAgB,CAAC,SAAU,IAM3B,KACH,EAAgB,MAAM,CAAC,GAClB,EAAgB,IAAI,EACU,YAA/B,AAA2C,OAApC,IACP,OAAO,mBAAmB,CAAC,SAAU,GACrC,OAAsB,EAE9B,GCvBmD,AFkCvD,SAAS,AAAc,CAAM,CAAE,CAAO,EAC7B,AEnC4D,AFmC7D,GEnCgE,AF8BtC,OAM1B,MALA,AADA,OAAO,iBAEX,EAAW,IAAI,eAAe,EAAA,EAK9B,IAAM,EAAW,CAAA,EAAA,EAAA,eAAe,AAAf,EAAgB,GAUjC,OATA,EAAS,OAAO,CAAC,AAAC,IACd,IAAI,EAAkB,EAAe,GAAG,CAAC,GACpC,IACD,EAAkB,IAAI,IACtB,EAAe,CAFG,EAEA,CAAC,EAAS,IAEhC,EAAgB,GAAG,CAAC,GACpB,GAAU,QAAQ,EACtB,GACO,KACH,EAAS,OAAO,CAAC,AAAC,IACd,IAAM,EAAkB,EAAe,GAAG,CAAC,GAC3C,GAAiB,OAAO,GACpB,AAAC,GAAiB,MAAM,AACxB,GAAU,UAAU,EAE5B,EACJ,CACJ,IUZ6D,IAErD,EAAO,gBAAgB,CAAC,SAAU,EAAU,CAAE,SAAS,CAAK,GAC5D,GACJ,CACA,IAAM,EAAW,EAAgB,GAAG,CAAC,GAErC,OADA,EAAA,KAAK,CAAC,IAAI,CAAC,GAAU,GAAO,GACrB,KACH,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,GAIZ,IAAM,EAAkB,EAAiB,GAAG,CAAC,GAC7C,GAAI,CAAC,IAEL,EAAgB,MAAM,CAAC,GACnB,EAAgB,IAAI,EAFpB,AAGA,OAIJ,IAAM,EAAiB,EAAgB,GAAG,CAAC,GAC3C,EAAgB,MAAM,CAAC,GACnB,IACA,EAAe,GAAW,OADV,YAC6B,CAAC,SAAU,GACxD,EAAgB,GAAG,CAAC,OACpB,OAAO,mBAAmB,CAAC,SAAU,GAE7C,CACJ,CX1EA,IAAM,EAAgB,IAAI,IAQ1B,SAAS,EAAY,QAAE,CAAM,WAAE,CAAS,CAAE,GAAG,EAAS,EAClD,GAAM,MAAE,CAAI,CAAE,CAAG,EACb,IACA,EAAY,CAAA,EAChB,IAAM,EAAiB,EAAc,GAAG,CAAC,IAAc,IAAI,IAC3D,EAAc,GAAG,CAAC,EAAW,GAC7B,IAAM,EAAY,EAAQ,MAAM,EAAI,OAC9B,EAAc,EAAe,GAAG,CAAC,IAAc,CAAC,EAChD,EAAU,EAAO,CAAC,EAAQ,MAAM,EAAI,EAAA,AAAE,EAAE,IAAI,CAAC,KAOnD,OANI,AAAC,CAAW,CAAC,EAAQ,EAAE,CACvB,CAAW,CAAC,EAAQ,CAChB,CAAC,EAAQ,MAAM,EAAI,CAAA,EAAA,EAAA,sBAAA,AAAsB,IACnC,IAAI,eAAe,CAAE,OAAQ,OAAW,CAAK,GAnB/D,AAoBkB,SApBT,AAAuB,CAAO,EACnC,IAAM,EAAc,CAAE,MAAO,CAAE,EACzB,EAAS,EAAW,AAAC,IACvB,EAAY,KAAK,CAAiC,IAA9B,CAAI,CAAC,EAAQ,IAAI,CAAC,CAAC,QAAQ,AACnD,EAAG,GACH,MAAO,aAAE,SAAa,CAAO,CACjC,EAcyC,WAAE,EAAW,GAAG,CAAO,AAAC,EAAA,EAEtD,CAAW,CAAC,EACvB,AAD+B,CHrB/B,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,MAEA,IAAM,EAA2B,IAAM,CAAC,CACpC,QAAS,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,GACrB,QAAS,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,GACrB,gBAAiB,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,GAC7B,gBAAiB,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,GACjC,CAAC,CACK,EAAgB,AAAD,GACjB,CAAI,CAAC,GAEE,CAAC,CADJ,CACQ,MADD,CACQ,CAEvB,SAAS,EAAU,WAAE,CAAS,QAAE,CAAM,CAAE,GAAG,EAAS,CAAG,CAAC,CAAC,EACrD,IAAM,EAAS,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,GACrB,EAAkB,CAAA,EAAA,EAAA,MAAA,AAAM,EAAC,MACzB,EAAa,CAAA,EAAA,EAAA,MAAA,AAAM,GAAC,GACpB,EAAQ,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,KACtB,EAAgB,OAAO,CAAG,ACpBlC,SAAS,AAAO,CAAQ,CAAE,CAAE,OAAO,GAAG,WAAE,EAAY,SAAS,gBAAgB,CAAE,GAAG,EAAS,CAAG,CAAC,CAAC,UAC5F,GAAI,CAAC,EACD,OAAO,EAAA,IAAI,CACf,IAAM,EAAsB,MAAE,YAAM,EAAW,GAAG,CAAO,AAAC,EAC1D,MAA2B,YAApB,CACD,MADQ,GeGQ,EfFC,EeES,EfFC,EeAN,AAEG,AAC9B,GADuC,CAChB,AAHhB,AAGH,EAHY,MAAM,CAIX,EADuB,AACZ,AAAC,IACf,EAAS,CAAI,CAAC,EAAQ,IAAI,CAAC,CAAC,QAAQ,CAAE,EAC1C,EAAG,GAGI,EAAgB,EAAU,EAAY,KfR3C,AcPV,SAAS,AAAkB,CAAS,CAAE,CAAO,EACzC,IAAM,EAAW,EAAY,GAC7B,OAAO,EAAU,cAAc,CAAC,CAC5B,SAAU,EAAQ,MAAM,MAAG,EAAY,EACvC,QAAS,AAAC,IACN,EAAe,KAAK,GACb,EAAiB,AAAD,IACnB,EAAe,IAAI,CACf,EAAe,iBAAiB,CAAG,CAC3C,EAAG,GAEX,EACJ,EdL4B,EAAU,EACtC,EDayC,CAAC,EAAW,CAAE,GAAC,CAAE,GAAC,CAAG,IAClD,EAAO,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,EAC5B,EAAO,eAAe,CAAC,GAAG,CAAC,EAAE,QAAQ,EACrC,EAAO,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,EAC5B,EAAO,eAAe,CAAC,GAAG,CAAC,EAAE,QAAQ,CACzC,EAAG,CACC,GAAG,CAAO,CACV,UAAW,GAAW,cAAW,EACjC,OAAQ,GAAQ,cAAW,CAC/B,GACO,KACH,EAAgB,OAAO,IAC3B,GACD,CAAC,EAAW,EAAQ,KAAK,SAAS,CAAC,EAAQ,MAAM,EAAE,EAqBtD,MApBA,CAAA,EAAA,EAAA,yBAAA,AAAyB,EAAC,KAEtB,GADA,EAAW,OAAO,EAAG,IACjB,EAAa,IAAc,EAAa,EAAA,EAKxC,CALiD,MAK1C,IAJP,EAAW,OAAO,EAAG,CAM7B,EAAG,CAAC,EAAM,EACV,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,IACF,AAAJ,EAAe,OAAO,EAAE,AACpB,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,CAAC,EAAa,GAAY,4CAA6C,kBACjF,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,CAAC,EAAa,GAAS,yCAA0C,kBACpE,UAGP,EAEL,CAAC,EAAM,EACH,CACX,0DiB3DA,IAAA,EAAA,EAAA,CAAA,CAAA,OCEA,EAAA,EAAA,CAAA,CAAA,OCDA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,MCDA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,ODEA,SAAS,EAAuB,CAAM,CAAE,CAAa,EAIjD,IAAM,ECcV,ADdkB,SCcT,AAAe,CAAO,EAC3B,IAAM,EAAQ,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,IAAM,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,IAMtC,UAAE,CAAQ,CAAE,CAAG,CAAA,EAAA,EAAA,UAAU,AAAV,EAAW,EAAA,mBAAmB,EACnD,GAAI,EAAU,CACV,GAAM,EAAG,EAAU,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,GAC/B,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,IAAM,EAAM,EAAE,CAAC,SAAU,GAAY,EAAE,CACrD,CACA,OAAO,CACX,ED3BiC,KAOvB,EAAc,IAAM,EAAM,GAAG,CAAC,KAkBpC,OAbA,IAKA,CAAA,EAAA,EAAA,yBAAA,AAAyB,EAAC,KACtB,IAAM,EAAiB,IAAM,EAAA,KAAK,CAAC,SAAS,CAAC,GAAa,GAAO,GAC3D,EAAgB,EAAO,GAAG,CAAC,AAAC,GAAM,EAAE,EAAE,CAAC,SAAU,IACvD,MAAO,KACH,EAAc,OAAO,CAAC,AAAC,GAAgB,KACvC,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,EAChB,CACJ,GACO,CACX,CD7BA,SAAS,EAAa,CAAK,CAAE,CAAuB,CAAE,CAAW,CAAE,CAAO,EACtE,GAAqB,YAAjB,AAA6B,OAAtB,EACA,CGCX,EAAA,mBAAmB,CAAC,OAAO,CAAG,EAAE,CAChC,IACA,IAAM,EAAQ,EAAuB,EAAA,mBAAmB,CAAC,OAAO,CHHzC,CGG2C,EAKlE,OADA,EAAA,mBAAmB,CAAC,OAAO,MAAG,EACvB,CHRgB,CAEvB,IAAM,EAAc,AAAmC,mBAA5B,EACrB,EDTV,ACUU,SDVD,AAAU,GAAG,CAAI,EACtB,IAAM,EAAe,CAAC,MAAM,OAAO,CAAC,CAAI,CAAC,EAAE,EACrC,EAAY,EAAe,EAAI,CAAC,EAChC,EAAa,CAAI,CAAC,EAAI,EAAU,CAChC,EAAa,CAAI,CAAC,EAAI,EAAU,CAChC,EAAc,CAAI,CAAC,EAAI,EAAU,CACjC,EAAU,CAAI,CAAC,EAAI,EAAU,CAC7B,EAAe,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,EAAY,EAAa,GAC1D,OAAO,EAAe,EAAa,GAAc,CACrD,ECCoB,EAAyB,EAAa,GACtD,OAAO,MAAM,OAAO,CAAC,GACf,EAAiB,EAAO,GACxB,EAAiB,CAAC,EAAM,CAAE,CAAC,CAAC,EAAO,GAAK,EAAY,GAC9D,CACA,SAAS,EAAiB,CAAM,CAAE,CAAW,EACzC,IAAM,EAAS,CAAA,EAAA,EAAA,WAAA,AAAW,EAAC,IAAM,EAAE,EACnC,OAAO,EAAuB,EAAQ,KAClC,EAAO,MAAM,CAAG,EAChB,IAAM,EAAY,EAAO,MAAM,CAC/B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,IAAK,AAChC,CAAM,CAAC,EAAE,CAAG,CAAM,CAAC,EAAE,CAAC,GAAG,GAE7B,OAAO,EAAY,EACvB,EACJ","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]}